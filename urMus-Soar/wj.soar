sp {wj-urmus*propose*pour
    (state <s> ^name wj-urmus ^io <i*1>)
    (<i*1> ^input-link <in>)
    (<in> ^jug <j2> ^jug { <> <j2> <j1> })
    (<j2> ^contents <c*2> ^volume { <> <c*2> <v2> })
    (<j1> ^contents { <> 0. <c*1> } ^volume <v1>)
    -->
    (<s> ^operator <op> +)
    (<op> ^name pour + ^from <v1> + ^to <v2> +)
}

sp {apply*initialize-wj-urmus
    (state <s> ^operator <op>)
    (<op> ^name initialize-wj-urmus)
    -->
    (<s> ^name wj-urmus +)
}

sp {propose*initialize-wj-urmus
    (state <s> ^superstate nil -^name <n*1>)
    -->
    (<s> ^operator <o> +)
    (<o> ^name initialize-wj-urmus +)
}

sp {wj-urmus*propose*fill
    (state <s> ^name wj-urmus ^io <i*1>)
    (<i*1> ^input-link <i*2>)
    (<i*2> ^jug <j>)
    (<j> ^contents <c*1> ^volume { <> <c*1> <v> })
    -->
    (<s> ^operator <op> +)
    (<op> ^name fill + ^jug <v> +)
}

sp {wj-urmus*propose*empty
    (state <s> ^name wj-urmus ^io <i*1>)
    (<i*1> ^input-link <i*2>)
    (<i*2> ^jug <j>)
    (<j> ^contents { <> 0. <c*1> } ^volume <v>)
    -->
    (<s> ^operator <op> +)
    (<op> ^name empty + ^jug <v> +)
}

sp {elaborate*top-state*top-state
    (state <s> ^superstate nil)
    -->
    (<s> ^top-state <s> +)
}

sp {elaborate*state*top-state
    (state <s> ^superstate <s*1>)
    (<s*1> ^top-state <ts>)
    -->
    (<s> ^top-state <ts> +)
}

sp {elaborate*state*name
    (state <s> ^superstate <s*1>)
    (<s*1> ^operator <o*1>)
    (<o*1> ^name <name>)
    -->
    (<s> ^name <name> +)
}

sp {all*elaborate*reward-pos
    (state <s> ^reward-link <rl> ^io <i*1>)
    (<i*1> ^input-link <in>)
    (<in> ^jug <j> ^goal <g>)
    (<j> ^contents <c> ^volume <v>)
    (<g> ^contents <c> ^volume <v>)
    -->
    (<rl> ^reward <r*1> +)
    (<r*1> ^value 10 +)
}

sp {apply*do*clean
    (state <s> ^io <i*1> ^operator <op>)
    (<i*1> ^output-link <out>)
    (<out> ^<name> <action>)
    (<action> ^status <s*1>)
    -->
    (<out> ^<name> <action> -)
}

sp {apply*do*attrs
    (state <s> ^io <i*1> ^operator <op>)
    (<i*1> ^output-link <out>)
    (<op> ^name <name> ^<attr> <val>)
    (<out> ^<name> <action>)
    (<action> -^status <s*1>)
    -->
    (<action> ^<attr> <val> +)
}

sp {apply*do
    (state <s> ^io <i*1> ^operator <op>)
    (<i*1> ^output-link <out>)
    (<op> ^name <name> ^name { << pour fill empty >> <n*1> })
    -->
    (<out> ^<name> <action> +)
}

sp {wj*from-to
   :template
    (state <s> ^io <i*1> ^operator <op> +)
    (<i*1> ^input-link <in>)
    (<in> ^jug <j2> ^jug { > <j2> <j1> } ^goal <g>)
    (<j2> ^contents <c2> ^volume <v2>)
    (<j1> ^contents <c1> ^volume { <> <v2> <v1> })
    (<op> ^to <to> ^from <from> ^name <name>)
    -->
    (<s> ^operator <op> = 0)
}

sp {wj*jug
   :template
    (state <s> ^io <i*1> ^operator <op> +)
    (<i*1> ^input-link <in>)
    (<in> ^jug <j2> ^jug <j1> ^goal <g>)
    (<j2> ^contents <c2> ^volume <v2>)
    (<j1> ^contents <c1> ^volume { <> <v2> <v1> })
    (<op> ^jug <v1> ^name <name>)
    -->
    (<s> ^operator <op> = 0)
}



